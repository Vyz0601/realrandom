import { QueryKey } from '@tanstack/react-query';
import type { CreateRouter, RouterConfig, RouterInfiniteQuery, RouterInfiniteQueryOptions, RouterMutation, RouterMutationOptions, RouterQuery, RouterQueryOptions } from './types';
export declare const router: {
    <TConfig extends RouterConfig>(key: string | QueryKey, config: TConfig): CreateRouter<TConfig>;
    query<TFnData, TVariables = void, TError = Error>(options: RouterQueryOptions<TFnData, TVariables, TError>): RouterQuery<TFnData, TVariables, TError>;
    infiniteQuery<TFnData_1, TVariables_1 = void, TError_1 = Error, TPageParam = number>(options: RouterInfiniteQueryOptions<TFnData_1, TVariables_1, TError_1, TPageParam>): RouterInfiniteQuery<TFnData_1, TVariables_1, TError_1, TPageParam>;
    mutation<TFnData_2 = unknown, TVariables_2 = void, TError_2 = Error, TContext = unknown>(options: RouterMutationOptions<TFnData_2, TVariables_2, TError_2, TContext>): RouterMutation<TFnData_2, TVariables_2, TError_2, TContext>;
};
